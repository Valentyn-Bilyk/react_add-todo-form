{"version":3,"sources":["api/users.ts","services/userId.ts","components/Form/Form.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","Form","onSubmit","todos","useState","title","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","newId","Math","max","map","todo","action","method","event","preventDefault","completed","className","htmlFor","type","placeholder","value","onChange","target","disabled","UserInfo","href","TodoInfo","cn","TodoList","preparedTodos","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04f85839.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/user';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/todo';\nimport { getUserById } from '../../services/userId';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n  todos: Todo[]\n};\n\nexport const Form: React.FC<Props> = ({ onSubmit, todos }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const newId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: newId,\n      userId,\n      title,\n      completed: false,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n\n      <div className=\"field\">\n        <label htmlFor=\"title\">Title: </label>\n\n        <input\n          id=\"title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {hasTitleError\n          && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"select-user\">User: </label>\n\n        <select\n          id=\"select-user\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleSelectChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {usersFromServer.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../types/user';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\n\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/todo';\nimport { Form } from './components/Form';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './services/userId';\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <Form onSubmit={addTodo} todos={todos} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}